Introduction
============

This guide helps to setup the moco server for AC-B Controller to learn the
REST API supported by overlay-vpn driver service.

Configuration of the Mocked Overlay Controller environment
=========================================================

1. Install the moco standalone server by following the steps given at
https://github.com/dreamhead/moco/blob/master/moco-doc/usage.md#shell

2. Run the moco server using following command to mock the AC-B Controller:

    java -jar moco-runner-0.11.0-standalone.jar https -p 18008 -c
    mockoservice-overlayvpndriver.json -https cert.jks -cert mocohttps
    --keystore mocohttps

    mockoservice-overlayvpndriver.json file can be found in sample-api-usage:
    cert.jks can be downloaded from here :
    https://github.com/dreamhead/moco/tree/master/moco-runner/src/test/resources/certificate

    Please note down the shutdown port reported in console when moco server
    started. And use that port to shutdown the server as below:

         moco shutdown -p <shutdown port number>

    Now controller is up. Following is the example to access the api:

    https://<Simulated Conroller IP>:18008/controller/cloud/v2/northbound/config/[a-zA-Z0-9\\-\\_]{1,36}/device/arvpnsipsec
    Method: GET
    HEADER: Content-Type: application/json


3. Add overlay (e,g AC-B) controller to ESR service by using below sample json
(please refer http://wiki.open-o.org , for how to register AC-B controller
using ESR)


4. For each REST API supported by overlay-vpn driver services, corresponding
samples request and response details are provided under the folder
'sample-api-usage'.

Ensure that 'driver.json' file under folder 'generalconfig/driver.json' is
configured with correct IP address for overlay-vpn driver. This information
will be used for driver registeration with driver manager.

Tutorial
=========

To test the REST API, either postman or curl command could be used. Before
testing, update the header "X-Driver-Parameter": "extSysID=<Conroller ID
generated by ESR>" and use the JSON body as it is.

Bringup the docker container for MSB, ESR, Driver-Manager and overlay-vpn
driver service as per wiki (https://wiki.open-o.org/view/Installation_Instructions).
Bringup the mocked/simuated controller as per the previous section.

For creating VxLAN please refer NBIs from wiki
(https://wiki.open-o.org/view/SDN-O_VXLAN_SBI_YAML_v1_0_0).
